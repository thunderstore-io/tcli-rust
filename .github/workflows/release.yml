name: Release

on:
  push:
    tags:
    - "[0-9]+.[0-9]+.[0-9]+"

jobs:
  prepare:
    name: Create draft release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Check that current branch is master
        if: endsWith(github.ref, 'master') == false
        run: exit -1

      - name: Create draft release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: >-
          gh release create ${{ github.ref_name }} 
          --title "${{ github.ref_name }}"
          --draft 
          --prerelease
          --generate-notes
  
  build-windows:
    needs: prepare
    runs-on: windows-latest
    strategy:
      matrix:
        target:
          - x86_64-pc-windows-msvc
  
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          target: ${{ matrix.target }}

      - name: Restore cache
        uses: Swatinem/rust-cache@v2

      - name: Install cargo-edit
        run: cargo install cargo-edit --locked

      - name: Set Cargo.toml version
        run: cargo set-version ${{ github.ref_name }}

      - name: Build
        run: cargo build --target ${{ matrix.target }} --release

      - name: Compress
        run: |
          cd ./target/${{ matrix.target }}/release/
          7z a "tcli-${{ matrix.target }}.zip" "tcli.exe"
          mv "tcli-${{ matrix.target }}.zip" ${{ github.workspace }}
      
      - name: Submit build artifact
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: >-
          gh release upload ${{ github.ref_name }} tcli-${{ matrix.target }}.zip
  
  build-linux:
    needs: prepare
    runs-on: ubuntu-latest
    strategy:
      matrix:
          target:
            - x86_64-unknown-linux-gnu

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Restore cache
        uses: Swatinem/rust-cache@v2

      - name: Install cargo-edit
        run: cargo install cargo-edit --locked

      - name: Set Cargo.toml version
        run: cargo set-version ${{ github.ref_name }}

      - name: Build
        run: cargo build --target ${{ matrix.target }} --release

      - name: Compress
        run: |
          cd ./target/${{ matrix.target }}/release/
          tar czfv tcli-${{ matrix.target }}.tar.gz tcli
          mv tcli-${{ matrix.target }}.tar.gz $GITHUB_WORKSPACE 

      - name: Submit build artifact
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: >-
          gh release upload ${{ github.ref_name }} tcli-${{ matrix.target }}.tar.gz 
